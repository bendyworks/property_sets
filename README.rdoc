= Property sets

The property_set gem is an evolution of the has_settings gem which was an evolution of the features gem. This is getting old.

This gem is a way for you to use a basic "key/value" store for storing attributes for a given model in a relational fashion where there's a row per attribute. Alternatively you'd need to add a new column per attribute to your main table, or serialize the attributes and their values.

== Description

You configure the allowed stored properties by specifying these in an initializer:

  class Account < ActiveRecord::Base
    property_set :settings do
      property :version, :default => "v1.0"
      property :featured
      property :product
    end

    property_set :texts do
      property :epilogue
    end
  end

The declared properties can then be accessed runtime via the defined association:

  # Return the version record for this account - or a new record if none exists
  account.settings.version

  # Create (or update) the version record with default value
  account.settings.version.create

  # Create (or update) the version record with the given value
  account.settings.version.create(:value => "v1.1")

  # Destroy the version record
  account.settings.version.destroy

On top of the basic access paths, there are some short cuts:

  account.settings.featured=(1)     # immediately changes the value of the setting
  account.settings.featured?        # coerces the setting to boolean AR style
  account.settings.featured.enable  # sets the value of this setting to a true value
  account.settings.featured.disable # sets the value of this setting to a false value

If the value has never been set, a nil (or default) is returned. And that's pretty much it.

Stored properties can also be updated with the update_attributes and update_attributes! methods by
enabling nested attributes. See the test cases for examples.

== Installation

Install the gem in your rails project by putting it in your Gemfile:

  gem 'property_set'

Also remember to create the storage table, if for example you are going to be using this with an accounts model, you can define the table like:

  create_table :account_settings do |t|
    t.integer  :account_id, :null => false
    t.string   :name, :null => false
    t.string   :value
    t.timestamps
  end

  add_index :account_settings, [ :account_id, :name ], :unique => true

== Requirements

* ActiveRecord
* ActionPack

== LICENSE:

(The MIT License)

Copyright (c) 2010 Zendesk

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.